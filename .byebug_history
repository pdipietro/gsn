quit
instance_variable_defined?(ivar)
s
ivar
s
resolver
s
extname
s
@env["rack.url_scheme"]
, 'data-turbolinks-track' => true
rack.url_scheme
s
secure_subresource_integrity_context?
s
options
n
s
c
integrity
n
s
sources
s
q
c
q
c
n
c
s
paths.each do |p|, p, end
paths.each do |p|
paths
psths
n
s
n
s
current
paths
path
s
path
s
paths
s
@context
c
@@options.key?(name)
s
@@options[:neo4j]
name
@@options[:"joinple"]
@@options["joinple"]
@@options[joinple]
@@options[:name]
@@options[name]
@@options.key?(name)
@@options.key?[:name
@@options.key?[:name]
@@options.key?[name]
@@options.key?
@@options
n
blk
args
name
s
@config
self.class.called_from
s
n
s
cfg
s
@@options[name]
s
name
n
s
c
s
ary
s
ss
s
:INT
n
s
n
s
server
n
c
uuid
decoded_style
style
n
title
c
_preset[:cropping]
_preset.cropping
_preset
n
_preset
c
g
_preset.cropping
_preset
c
n
c
n
s
_preset
n
c
ImageKindsHelper::IMAGE_KIND[preset.gsub(/-/,"_").to_sym]
ImageKindsHelper::IMAGE_KIND[preset].to_s.gsub(/-/,"_").to_sym
ImageKindsHelper::IMAGE_KIND[preset].gsub(/-/,"_").to_sym
preset
ImageKindsHelper::IMAGE_KIND[:preset]
ImageKindsHelper::IMAGE_KIND[preset]
ImageKindsHelper::IMAGE_KIND[preset.to_sym]
preset
_preset
n
c
preset
preset.to_sym
preset.to_symbol
c
n
_preset
n
_preset
n
c
_preset
n
c
_preset
n
c
g
n
  attr_accessor :remember_token
n
subject_profile_params
c
g
c
subject_profile_params
c
n
subject_profile_params
c
params.require(:subject_profile)
subject_profile_params
subject_profile_params[:photo]
c
subject_profile_params[:photo]
subject_profile_params
c
n
@subject_profile
c
@subject_profile
n
c
subject_profile_params
c
n
c
n
c
n
c
image_uuid
c
n
c
n
c
n
size
c
n
c
n
c
n
c
n
c
n
c
subject_profile
defined?(subject_profile)
defined?(subject)
defined?subject)
defined?(subjec_profile)
defined?(object)
object
n
c
subject_profile
n
c
n
nn
n
s
object
subject
n
subject
n
rels
n
c
subjc
object
subject
n
c
n
@social_network
n
@social_network
n
c
q
!!!
n
social_network_params
c
c=send(:"load_yml","/home/joinple/joinple/it.yml")
c=send(":load_yml","/home/joinple/joinple/it.yml")
c=send(:load_yml,"/home/joinple/joinple/it.yml")
c=send(:load_yml,"/home/joinple/joinple/config/locales/it.yml")
type
filename
data
q
c
g
q
data
n
data
n
c
data
locale
