- unless defined?(local_current_subject)
  - className = object.class.name
  - query = Neo4j::Session.query("match (o:#{className} { uuid : '#{object[:uuid]}' })<-[rel:owns]-(u:Subject)-[p:has_profile]->(up:SubjectProfile) return u, up")
  - subject = query.first[:u]
  - subject_profile = query.first[:up]

- title = defined?(title) ? title : "Edit"

- size = defined?(size) ? size : "36x36"
- size = defined?(size) ? size : "36"


= puts "subject_profile: #{subject}"

- if defined?(local_current_subject)
  = image_tag current_subject.has_profile.photo.url(:btn), :class => "circle padding-1", :size => size
- elsif defined?(show)
  = image_tag subject_profile.photo.url(:btn), :class => "circle padding-1", :size => size
- elsif defined?(type)
  %span{ :class => "semi-transparent-#{type}-bar", :style => "clear: both;" }
  %div.solida.not-hoverable
    = link_to subject_profile_path(subject.has_profile.uuid), :remote => :true, :title => title, :class => ("hoverable white") do
      -#= image_tag subject_profile.photo.url(:btn), :class => "circle padding-1", :size => size
      = render partial: "subject_profile/photo_show", locals: { :subject_profile => subject_profile, :size => :photo, :class => "circle padding-1" }
      = "#{subject.full_name} (@#{subject.nickname})"
    %span.to-right.vertical-middle
      = "created on #{object.created_at.to_formatted_s(:short)}"
- else
  %span
    = link_to subject_profile_path(subject.has_profile.uuid), :remote => :true, :title => title, :class => ("hoverable") do
      = image_tag subject_profile.photo.url(:btn), :class => "circle padding-1", :size => size
      = render partial: "subject_profile/photo_show", locals: { :subject_profile => subject_profile, :size => size, :class => "circle padding-1" }
      = "#{subject.full_name} (@#{subject.nickname})"


