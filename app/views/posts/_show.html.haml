- if post.errors.count == 0
  - rels = count_relationships(post)
  %div
    - arr = Array.new
    - arr << post.image0 unless post.image0.length == 0  
    - arr << post.image1 unless post.image1.length == 0  
    - arr << post.image2 unless post.image2.length == 0  
    - arr << post.image3 unless post.image3.length == 0  
    - arr << post.image4 unless post.image4.length == 0  
    - image_cnt = arr.length

    = puts "We have #{image_cnt} images."

    -# #####################################################################################

    .post{ :id => post.uuid }
      .header
        .relative.nothing
          - case image_cnt
            - when 0
              .solida-background
            - when 1
              = image_tag arr[0].url(:post), :class => "img-c0"
            - when 2
              = image_tag arr[0].url(:post_sq), :class => "img-c1"
              = image_tag arr[1].url(:post_sq), :class => "img-c1"
            - when 3
              = image_tag arr[0].url(:post_sq), :class => "img-c1"
              = image_tag arr[1].url(:post_s), :class => "img-c2"
              = image_tag arr[2].url(:post_s), :class => "img-c2"
            - when 4
              = image_tag arr[0].url(:post_s), :class => "img-c2"
              = image_tag arr[1].url(:post_s), :class => "img-c2"
              = image_tag arr[2].url(:post_s), :class => "img-c2"
              = image_tag arr[3].url(:post_s), :class => "img-c2"  
            - when 5
              = image_tag arr[0].url(:post_sq), :class => "img-c1"
              = image_tag arr[1].url(:post_sq), :class => "img-c3"
              = image_tag arr[2].url(:post_sq), :class => "img-c3"
              = image_tag arr[3].url(:post_sq), :class => "img-c3"
              = image_tag arr[4].url(:post_sq), :class => "img-c3"
          = render partial: 'users/owner', locals: { object: post, type: "owner"  }

        -#.owner{ :style => "clear: both;" }
          -#= render partial: 'users/owner', locals: { object: post, type: "owner"  }
      .border-1
      .content
        - if post.content.length > 300
          = post.content[0...300]
          = link_to dummy_path(post,'Post','likes'), :remote => :true, :title => "read more" do
            "... more"
        - else
          = post.content[0...300]
      .border-1

      .commands
        .spacer
        .command-button
          .spaced-icon
            = link_to dummy_path(post,'Post','likes'), :remote => :true, :title => "Likes" do
              %i.im-likes.im-20x
              = rels["out-follows-User"].nil? ? 0 : rels["out-follows-User"]
          .spaced-icon
            = link_to dummy_path(post,'Post','likes'), :remote => :true, :title => "Preferreds" do
              %i.im-discussions-groups.im-20x
              = rels["out-follows-User"].nil? ? 0 : rels["out-follows-User"]
          .spaced-icon
            = link_to dummy_path(post,'Post','likes'), :remote => :true, :title => "Repost" do
              %i.im-bi-follow.im-20x
              = rels["out-follows-User"].nil? ? 0 : rels["out-follows-User"]
        .border-1


    -# #####################################################################################

    -#.post{ :id => post.uuid }
      .header
        - case image_cnt
          - when 0
            .owner{ :style => "position: relative;" }
              = render partial: 'users/owner', locals: { object: post, type: "gray"   }
          - when 1
            .owner{ :style => "position: relative;" }
              = image_tag arr[0].url(:post), :class => "responsive img-top"
              = render partial: 'users/owner', locals: { object: post, type: "gray"   }
          - when 2
            .owner{ :style => "position: relative;" }
              = image_tag arr[0].url(:post_sq), :class => "img-c1"
              = image_tag arr[1].url(:post_sq), :class => "img-c1"
              = render partial: 'users/owner', locals: { object: post, type: "gray"  }
          - when 3
            .owner{ :style => "position: relative;" }
              = image_tag arr[0].url(:post), :class => "responsive img-top"
              = render partial: 'users/owner', locals: { object: post, type: "gray"   }
            = image_tag arr[1].url(:post_s), :class => "img-c1"
            = image_tag arr[2].url(:post_s), :class => "img-c1"
          - when 4
            .owner{ :style => "position: relative;" }
              = image_tag arr[0].url(:post_sq), :class => "img-c1"
              = image_tag arr[1].url(:post_sq), :class => "img-c1"
              = render partial: 'users/owner', locals: { object: post, type: "gray"   }
            = image_tag arr[2].url(:post_s), :class => "img-c1"
            = image_tag arr[3].url(:post_s), :class => "img-c1"
          - when 5
            .owner{ :style => "position: relative;" }
              = image_tag arr[0].url(:post), :class => "responsive img-top"
              = render partial: 'users/owner', locals: { object: post, type: "gray"   }
            = image_tag arr[1].url(:post_s), :class => "img-c1"
            = image_tag arr[2].url(:post_s), :class => "img-c1"
            = image_tag arr[3].url(:post_s), :class => "img-c1"
            = image_tag arr[4].url(:post_s), :class => "img-c1"

        .owner{ :style => "clear: both;" }
          -#= render partial: 'users/owner', locals: { object: post  }
      .content
        = post.content
      .commands
    .spacer