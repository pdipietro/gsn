- rels = count_relationships(post_comment)
 
- q = "match (o:PostComment { uuid : '#{post_comment.uuid}' })<-[rel:owns]-(u:User)-[p:has_profile]->(up:UserProfile) return u, up;"
- query = Neo4j::Session.query(q)
- user = query.first[:u]
- user_profile = query.first[:up]

.post-content{ :id => post_comment.uuid }
  .border-1
  .content
    .col-xs-5
      = link_to user_profile_path(user.has_profile.uuid), :remote => :true, :title => "show" do
        .owner-image= image_tag user.has_profile.photo.url(:btn), :class => "circle padding-1", :size => "30x30"
    .col-xs-52
      - if post_comment.content.length > 300
        .first-part.collapse.in{ :name => "post_comment_content_full_#{post_comment.uuid}"}
          %span
            = link_to user_profile_path(user.has_profile.uuid), :remote => :true, :title => "show", :class => ("hoverable") do
              = "#{user.full_name}"
          = post_comment.content[0...300]
          %a.toggle.hoverable{ :type => "toggle", "data-target" => "div[name=post_comment_content_full_#{post_comment.uuid}]", "data-toggle" => "collapse"}
            %i.header-dropdown.im-about
            %span= " ... more"
        .full-part.collapse{ :name => "post_comment_content_full_#{post_comment.uuid}"}
          %span
            = link_to user_profile_path(user.has_profile.uuid), :remote => :true, :title => "show", :class => ("hoverable") do
              = "#{user.full_name}"
          %a.toggle{ :type => "toggle", "data-target" => "*[name=post_comment_content_full_#{post_comment.uuid}]", "data-toggle" => "collapse"}
            %span= post_comment.content
      - else
        %span
          = link_to user_profile_path(user.has_profile.uuid), :remote => :true, :title => "show", :class => ("hoverable") do
            = "#{user.full_name}"
        %span= post_comment.content[0...300]

        -# *********************************** COMMAND LINE ****************************************** 

      .spacer
      %div
        .command-line-s
          = link_to onerel_path(post_comment,'PostComment','likes'), :method => :post, :remote => :true, :title => "Smile", :class => ("hoverable") do
            = rels["in-likes-me"].nil? ? "Smile" : "Not smile"
        .command-line-s.to-right
          - puts (rels)
          = link_to users_list_path('PostComment',post_comment.uuid,'likes'), :remote => :true, :title => "Likes", :class => ("hoverable") do
            %i.hoverable.im-like
            = rels["in-likes-User"].nil? ? 0 : rels["in-likes-User"]

    .col-xs-3
      = (Date.parse(DateTime.now.to_s) - Date.parse(post_comment.created_at.to_s)).to_i

      