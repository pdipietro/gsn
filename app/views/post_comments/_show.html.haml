- q = "match (o:PostComment { uuid : '#{post_comment.uuid}' })<-[rel:owns]-(u:User)-[p:has_profile]->(up:UserProfile) return u, up;"
- query = Neo4j::Session.query(q)
- user = query.first[:u]
- user_profile = query.first[:up]

.border-1

.content
  .col-xs-5
    = link_to user_path(user.uuid), :remote => :true, :title => "show" do
      .owner-image= image_tag user.has_profile.photo.url(:btn), :class => "circle padding-1", :size => "30x30"
  .col-xs-52
    - if post_comment.content.length > 300
      .first-part.collapse.in{ :name => "post_comment_content_full_#{post_comment.uuid}"}
        %span
          = link_to user_path(user.uuid), :remote => :true, :title => "show", :class => ("hoverable") do
            = "#{user.full_name}"
        = post_comment.content[0...300]
        %a.toggle.hoverable{ :type => "toggle", "data-target" => "div[name=post_comment_content_full_#{post_comment.uuid}]", "data-toggle" => "collapse"}
          %i.header-dropdown.im-about
          %span= " ... more"
      .full-part.collapse{ :name => "post_comment_content_full_#{post_comment.uuid}"}
        %span
          = link_to user_path(user.uuid), :remote => :true, :title => "show", :class => ("hoverable") do
            = "#{user.full_name}"
        %a.toggle{ :type => "toggle", "data-target" => "*[name=post_comment_content_full_#{post_comment.uuid}]", "data-toggle" => "collapse"}
          %span= post_comment.content
    - else
      %span
        = link_to user_path(user.uuid), :remote => :true, :title => "show", :class => ("hoverable") do
          = "#{user.full_name}"
      %span= post_comment.content[0...300]
  .col-xs-3
